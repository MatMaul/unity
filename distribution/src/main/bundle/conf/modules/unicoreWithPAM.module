# This configuration module enables end to end support for UNICORE, using PAM based authentication 
# and local host OS users.


# translation profile converting OS users
unityServer.core.translationProfiles.hostOS2UNICORE=${CONF}/modules/unicore/tr-hostOS2UNICORE.json

# initialization script: creates groups structure and UNICORE attribute types 
unityServer.core.script.9000.file=${CONF}/scripts/unicoreContentInitializer.groovy
unityServer.core.script.9000.trigger=pre-init

# authenticators relaying on PAM and certificates
unityServer.core.authenticators.unicorePamWeb.authenticatorName=unicorePamWeb
unityServer.core.authenticators.unicorePamWeb.authenticatorType=pam with web-password
unityServer.core.authenticators.unicorePamWeb.retrievalConfigurationFile=${CONF}/modules/unicore/pamRetrieval.json
unityServer.core.authenticators.unicorePamWeb.verificatorConfigurationFile=${CONF}/modules/unicore/pamVerificator.properties

unityServer.core.authenticators.unicorePamWS.authenticatorName=unicorePamWS
unityServer.core.authenticators.unicorePamWS.authenticatorType=pam with cxf-httpbasic
unityServer.core.authenticators.unicorePamWS.retrievalConfigurationFile=${CONF}/authenticators/empty.json
unityServer.core.authenticators.unicorePamWS.verificatorConfigurationFile=${CONF}/modules/unicore/pamVerificator.properties

unityServer.core.authenticators.unicoreCertWS.authenticatorName=unicoreCertWS
unityServer.core.authenticators.unicoreCertWS.authenticatorType=certificate with cxf-certificate
unityServer.core.authenticators.unicoreCertWS.localCredential=Certificate credential
unityServer.core.authenticators.unicoreCertWS.retrievalConfigurationFile=${CONF}/authenticators/empty.json


# import feature - required for serving UNICORE/X queries about user attributes
unityServer.core.userImport.hostOSImport=${CONF}/modules/unicore/hostOSImport.properties


# Endpoints exposing the functionality to UNICORE platform

# Web - for portal authN
unityServer.core.endpoints.unicoreWeb.endpointType=SAMLUnicoreWebIdP
unityServer.core.endpoints.unicoreWeb.endpointConfigurationFile=${CONF}/modules/unicore/saml-unicoreidp.properties
unityServer.core.endpoints.unicoreWeb.contextPath=/unicore-idp
unityServer.core.endpoints.unicoreWeb.endpointRealm=defaultRealm
unityServer.core.endpoints.unicoreWeb.endpointName=UNITY UNICORE web authentication
unityServer.core.endpoints.unicoreWeb.endpointAuthenticators=unicorePamWeb

# Used by UNICORE/X when authenticating its REST clients and by UCC/URC to provide certificate-less access
unityServer.core.endpoints.unicoreSOAPPass.endpointType=SAMLUnicoreSoapIdP
unityServer.core.endpoints.unicoreSOAPPass.endpointConfigurationFile=${CONF}/modules/unicore/saml-unicoreidp.properties
unityServer.core.endpoints.unicoreSOAPPass.contextPath=/unicore-soapidp
unityServer.core.endpoints.unicoreSOAPPass.endpointRealm=defaultRealm
unityServer.core.endpoints.unicoreSOAPPass.endpointName=UNITY UNICORE SOAP SAML service for REST queries
unityServer.core.endpoints.unicoreSOAPPass.endpointAuthenticators=unicorePamWS

# Used by UNICORE/X when user attributes are resolved (XUUDB replacement)
unityServer.core.endpoints.unicoreSOAPCert.endpointType=SAMLUnicoreSoapIdP
unityServer.core.endpoints.unicoreSOAPCert.endpointConfigurationFile=${CONF}/modules/unicore/saml-unicoreidp.properties
unityServer.core.endpoints.unicoreSOAPCert.contextPath=/unicore-soap-aip
unityServer.core.endpoints.unicoreSOAPCert.endpointRealm=defaultRealm
unityServer.core.endpoints.unicoreSOAPCert.endpointName=UNITY UNICORE SOAP SAML service for UNICORE server use (XUUDB replacement)
unityServer.core.endpoints.unicoreSOAPCert.endpointAuthenticators=unicoreCertWS
